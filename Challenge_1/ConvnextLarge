{"cells":[{"cell_type":"markdown","source":["# Enviroment Setting"],"metadata":{"id":"8Dd1UEg2-LxJ"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5277,"status":"ok","timestamp":1668900187739,"user":{"displayName":"Jana Khoury","userId":"07701165055658242759"},"user_tz":-60},"id":"nQHmf7P2OG7p","outputId":"030098ab-74b2-4389-ebb5-a0f07e039cb5"},"outputs":[{"name":"stdout","output_type":"stream","text":["2.10.0\n"]}],"source":["import os\n","import random\n","from datetime import datetime\n","\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score\n","from sklearn.metrics import confusion_matrix\n","from PIL import Image\n","\n","import tensorflow as tf\n","from keras.layers import Dropout\n","from keras.layers import BatchNormalization\n","from keras.regularizers import l2\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","\n","tfk = tf.keras\n","tfkl = tf.keras.layers\n","print(tf.__version__)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PkuwRtwgOLiX"},"outputs":[],"source":["# Random seed for reproducibility\n","seed = 42\n","\n","random.seed(seed)\n","os.environ['PYTHONHASHSEED'] = str(seed)\n","np.random.seed(seed)\n","tf.random.set_seed(seed)\n","tf.compat.v1.set_random_seed(seed)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8PxW_uy6ONZT"},"outputs":[],"source":["import warnings\n","import logging\n","\n","os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n","warnings.simplefilter(action='ignore', category=FutureWarning)\n","warnings.simplefilter(action='ignore', category=Warning)\n","tf.get_logger().setLevel('INFO')\n","tf.autograph.set_verbosity(0)\n","\n","tf.get_logger().setLevel(logging.ERROR)\n","tf.get_logger().setLevel('ERROR')\n","tf.compat.v1.logging.set_verbosity(tf.compat.v1.logging.ERROR)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BtEqZ43zOOPh"},"outputs":[],"source":["input_shape = (96, 96, 3)\n","target_size=(96,96)\n","classes = 8\n","epochs = 100\n","batch_size = 16"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LQptTOX0OQIl"},"outputs":[],"source":["# Setting dataset directories\n","splitted_data_dir = os.path.join('Dataset/splitted_data_balanced_new')\n","training_dir = os.path.join(splitted_data_dir + '/train')\n","validation_dir = os.path.join(splitted_data_dir + '/val')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B4VmEzv-OSAG"},"outputs":[],"source":["# Labels of the dataset for classification\n","labels = ['Species1',\n","          'Species2',\n","          'Species3',\n","          'Species4',\n","          'Species5',\n","          'Species6',\n","          'Species7',\n","          'Species8']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":868,"status":"ok","timestamp":1668900340100,"user":{"displayName":"Jana Khoury","userId":"07701165055658242759"},"user_tz":-60},"id":"x8xRLTvlO0nP","outputId":"2f1015e7-d077-4a9e-b963-12a30739e119"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 3896 images belonging to 8 classes.\n","Found 400 images belonging to 8 classes.\n"]}],"source":["# Create an instance of ImageDataGenerator with NO Data Augmentation\n","from tensorflow.keras.applications.convnext import preprocess_input\n","\n","# Create an instance of ImageDataGenerator with Data Augmentation\n","aug_train_data_gen = ImageDataGenerator(rotation_range=10,\n","                                        height_shift_range=25,\n","                                        width_shift_range=25,\n","                                        #zoom_range=0.3,\n","                                        #brightness_range=[0.2,1.8],\n","                                        #channel_shift_range = 150,\n","                                        #shear_range = 0.7,\n","                                        horizontal_flip=True,\n","                                        vertical_flip=True, \n","                                        fill_mode='reflect',\n","                                        #cval=0,\n","                                        preprocessing_function = preprocess_input) # rescale value is multiplied to the image\n","\n","# Obtain a data generator with the 'ImageDataGenerator.flow_from_directory' method\n","aug_train_gen = aug_train_data_gen.flow_from_directory(directory=training_dir,\n","                                                       target_size=target_size,\n","                                                       color_mode='rgb',\n","                                                       classes=None, # can be set to labels\n","                                                       class_mode='categorical',\n","                                                       batch_size=batch_size,\n","                                                       shuffle=True,\n","                                                       seed=seed)\n","\n","valid_data_gen = ImageDataGenerator(preprocessing_function = preprocess_input)\n","\n","valid_gen = valid_data_gen.flow_from_directory(directory=validation_dir,\n","                                               target_size=target_size,\n","                                               color_mode='rgb',\n","                                               classes=None, # can be set to labels\n","                                               class_mode='categorical',\n","                                               batch_size=batch_size,\n","                                               shuffle=False,\n","                                               seed=seed)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1668900308687,"user":{"displayName":"Jana Khoury","userId":"07701165055658242759"},"user_tz":-60},"id":"QMfAg6nLOiyY","outputId":"ee4d0ba3-1d05-4621-8a89-c821aba4c281"},"outputs":[{"name":"stdout","output_type":"stream","text":["Assigned labels\n","{'Species1': 0, 'Species2': 1, 'Species3': 2, 'Species4': 3, 'Species5': 4, 'Species6': 5, 'Species7': 6, 'Species8': 7}\n","\n","Target classes\n","[0 0 0 ... 7 7 7]\n"]}],"source":["print(\"Assigned labels\")\n","print(aug_train_gen.class_indices)\n","print()\n","print(\"Target classes\")\n","print(aug_train_gen.classes)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d2gV_G8BOj-M"},"outputs":[],"source":["def get_next_batch(generator):\n","  batch = next(generator)\n","\n","  image = batch[0]\n","  target = batch[1]\n","\n","  print(\"(Input) batch shape:\", image.shape)\n","  print(\"(Target) batch shape:\",target.shape)\n","\n","  # Visualize only the first sample\n","  image = image[0]\n","  print(\"(Input) image shape:\", image.shape)\n","  target = target[0]\n","  print(\"(Target) image shape:\",target.shape)\n","  target_idx = np.argmax(target)\n","  print()\n","  print(\"Categorical label:\", target)\n","  print(\"Label:\", target_idx)\n","  print(\"Class name:\", labels[target_idx])\n","  fig = plt.figure(figsize=(6, 4))\n","  plt.imshow(np.uint8(image))\n","\n","  return batch"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"executionInfo":{"elapsed":12817,"status":"ok","timestamp":1668900328615,"user":{"displayName":"Jana Khoury","userId":"07701165055658242759"},"user_tz":-60},"id":"WjMN8bluOmC6","outputId":"3e87729a-3fb1-4278-ecfa-dff1414f8bd1"},"outputs":[{"name":"stdout","output_type":"stream","text":["(Input) batch shape: (16, 96, 96, 3)\n","(Target) batch shape: (16, 8)\n","(Input) image shape: (96, 96, 3)\n","(Target) image shape: (8,)\n","\n","Categorical label: [0. 0. 0. 0. 0. 0. 0. 1.]\n","Label: 7\n","Class name: Species8\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 600x400 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Get a sample from dataset and show info\n","_ = get_next_batch(aug_train_gen)"]},{"cell_type":"markdown","metadata":{"id":"MWCDHpdzQMYZ"},"source":["# Fine Tuning"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hgite22xR6S6"},"outputs":[],"source":["model1 = tf.keras.applications.convnext.ConvNeXtLarge(weights = \"imagenet\", include_top=False, input_shape = (96, 96, 3))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DFGNSVe-SSrN"},"outputs":[],"source":["for layer in model1.layers[:50]:\n","    layer.trainable = False"]},{"cell_type":"code","source":["x = model1.output\n","x = tfkl.Flatten()(x)\n","x = tfkl.Dense(1024, activation=\"relu\")(x)\n","x = Dropout(0.5)(x)\n","x = tfkl.Dense(1024, activation=\"relu\")(x)\n","predictions = tfkl.Dense(8, activation=\"softmax\")(x) "],"metadata":{"id":"v6N-MGzY9muA"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vUGDRFzKUA3d"},"outputs":[],"source":["from keras.models import Sequential, Model "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yWgQUvPf9VWQ"},"outputs":[],"source":["model_final = Model(model1.input, predictions)\n","\n","compling our model\n","model_final.compile(loss=tfk.losses.CategoricalCrossentropy(), optimizer=tfk.optimizers.SGD(learning_rate=0.0001, momentum=0.9), metrics='accuracy')\n","\n","model_final.summary() #Model summary"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4ID9_hipShPE"},"outputs":[],"source":["# Utility function to create folders and callbacks for training\n","from datetime import datetime\n","\n","def create_folders_and_callbacks1(model_name):\n","    \n","\n","    cwd = os.getcwd()\n","\n","    exps_dir = os.path.join(cwd, 'classification_experiments')\n","    if not os.path.exists(exps_dir):\n","        os.makedirs(exps_dir)\n","\n","    now = datetime.now().strftime('%b%d_%H-%M-%S')\n","\n","    model_name = 'convnextlarge'\n","\n","    exp_dir = os.path.join(exps_dir, model_name + '_' + str(now))\n","    if not os.path.exists(exp_dir):\n","        os.makedirs(exp_dir)\n","      \n","    callbacks = []\n","\n","    # Model checkpoint\n","    # ----------------\n","\n","    ckpt_dir = os.path.join(exp_dir, 'ckpts')\n","    if not os.path.exists(ckpt_dir):\n","        os.makedirs(ckpt_dir)\n","\n","    ckpt_callback = tf.keras.callbacks.ModelCheckpoint(filepath=os.path.join(ckpt_dir, 'cp_class_{epoch:02d}.ckpt'),\n","                                                       save_weights_only=True)  # False to save the model directly\n","    callbacks.append(ckpt_callback)\n","\n","    # Visualize Learning on Tensorboard\n","    # ---------------------------------\n","    tb_dir = os.path.join(exp_dir, 'tb_logs')\n","    if not os.path.exists(tb_dir):\n","        os.makedirs(tb_dir)\n","    \n","    # By default shows losses and metrics for both training and validation\n","    tb_callback = tf.keras.callbacks.TensorBoard(log_dir=tb_dir,\n","                                                 profile_batch=0,\n","                                                 histogram_freq=1)  # if 1 shows weights histograms\n","    callbacks.append(ckpt_callback)\n","\n","\n","    # Early Stopping\n","    # --------------\n","    early_stop = True\n","    if early_stop:\n","        es_callback = tf.keras.callbacks.EarlyStopping(monitor='val_accuracy', mode='max', patience=10)\n","        callbacks.append(es_callback)\n","\n","\n","    return callbacks"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BYn0IA9CSiP4"},"outputs":[],"source":["callbacks = create_folders_and_callbacks1(model_name='convnextlarge')\n","\n","# Train the model\n","history = model_final.fit(\n","    x = aug_train_gen,\n","    epochs = 100,\n","    validation_data = valid_gen,\n","    shuffle= True,\n","    callbacks = callbacks,\n",").history"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X0FZKzE09VWS"},"outputs":[],"source":["# Save the model\n","# Save best epoch model\n","model_final.save('convnextlarge')"]}],"metadata":{"colab":{"provenance":[]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.0"}},"nbformat":4,"nbformat_minor":0}